name: Build
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_NAME: ${{secrets.POSTGRES_NAME}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: dsvistelnik/todolist:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_USER }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render docker-compose
        run: |
          cat docker-compose-ci.yaml | envsubst > todolist/docker-compose.yaml
      - name: copy docker-compose.yaml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.NAME_SKYPRO_DS }}
          password: ${{ secrets.PASSWORD_DS_SSH }}
          source: "dsvistelnik/todolist/docker-compose.yaml"
          target: todolist
          strip_components: 1

      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.NAME_SKYPRO_DS }}
          password: ${{ secrets.PASSWORD_DS_SSH }}
          script: |
            cd todolist
            echo ${{ secrets.SKYPRO_PASSWORD }} | sudo -S docker-compose up -d
